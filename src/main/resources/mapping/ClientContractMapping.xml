<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.authine.cloudpivot.ext.mapper.ClientContractMapper" >

	<resultMap id="ClientContractMap" type="com.authine.cloudpivot.ext.vo.ClientContractVO">
		<id column="id" property="id" jdbcType="VARCHAR"/>
		<result column="jobcode" property="jobcode" jdbcType="VARCHAR"/>
		<result column="projectName" property="projectName" jdbcType="VARCHAR"/>
		<result column="contractType" property="contractType" jdbcType="VARCHAR"/>
		<result column="clientName" property="clientName" jdbcType="VARCHAR"/>
		<result column="clientContractVersion" property="clientContractVersion" jdbcType="VARCHAR"/>
		<result column="clientContractCode" property="clientContractCode" jdbcType="VARCHAR"/>
		<result column="clientContractStarttime" property="clientContractStarttime" jdbcType="VARCHAR"/>
		<result column="clientContractEndtime" property="clientContractEndtime" jdbcType="VARCHAR"/>
		<result column="clientContractStatus" property="clientContractStatus" jdbcType="VARCHAR"/>
		<result column="contractValue" property="contractValue" jdbcType="VARCHAR"/>

	</resultMap>


	<select id="getClientContractList" resultMap="ClientContractMap"  parameterType="com.authine.cloudpivot.ext.queryVo.QueryClientContract">
		SELECT
			c.id id,
			c.Jobcode jobcode,
			c.ProjectName projectName,
			c.contractType contractType,
			c.clientName clientName,
			c.clientContractVersion clientContractVersion,
			c.ClientContractCode clientContractCode,
			date_format(c.ClientContractPeriodStart,'%Y/%m/%d') clientContractStarttime,
			date_format(c.ClientContractPeriodEndtime,'%Y/%m/%d') clientContractEndtime,
			c.ClientContractStatus clientContractStatus,
			c.ContractAmount contractValue,
			workitem.id AS workItemId,
			instance.id AS instanceId
		FROM
			i_clientcontract c
		/*LEFT JOIN i_contracttype t ON c.contractType = t.id
		LEFT JOIN i_client_contract_version CCV ON c.clientContractVersion = ccv.id*/
		LEFT JOIN biz_workflow_instance instance ON c.id = instance.bizObjectId
		LEFT JOIN biz_workitem workitem ON instance.id = workitem.instanceId
		WHERE
			<if test="jobcode != null and jobcode != '' ">
				c.jobcode = #{jobcode}  and
			</if>

			<if test="clientContractStatus != null and clientContractStatus != '' ">
				c.clientContractStatus = #{clientContractStatus}  and
			</if>

			<if test="starttimeStart != null and starttimeStart != '' ">
				c.ClientContractPeriodStart &gt;= STR_TO_DATE(#{starttimeStart},'%Y/%m/%d')  and
			</if>

			<if test="starttimeEnd != null and starttimeEnd != ''">
				c.ClientContractPeriodStart &lt;= STR_TO_DATE(#{starttimeEnd},'%Y/%m/%d')  and
			</if>

			<if test="contractValue1 != null and contractValue1 != '' ">
				c.ContractAmount &gt;= #{contractValue1}  and
			</if>

			<if test="contractValue2 != null and contractValue2 != '' ">
				c.ContractAmount &lt;= #{contractValue2}  and
			</if>
			1=1
	</select>

	<select id="getClientContractById" resultType="com.authine.cloudpivot.ext.vo.ClientContractVO">
		SELECT
			c.id id,
			c.Jobcode jobcode,
			c.ProjectName projectName,
			c.contractType contractType,
			c.clientName clientName,
			c.clientContractVersion clientContractVersion,
			c.ClientContractCode clientContractCode,
			date_format(c.ClientContractPeriodStart,'%Y/%m/%d') clientContractStarttime,
			date_format(c.ClientContractPeriodEndtime,'%Y/%m/%d') clientContractEndtime,
			c.ClientContractStatus clientContractStatus,
			c.ContractAmount contractValue
		FROM
			i_clientcontract c
		where c.id in
		<foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</select>

	<select id="getClientContractCodeList" resultType="com.authine.cloudpivot.ext.vo.SelectVO" parameterType="com.authine.cloudpivot.ext.queryVo.QueryClientContract">
		select
		    clientcontract.id id,
			clientcontract.ClientContractCode name
		from i_clientcontract clientcontract
		where clientcontract.Jobcode =#{jobcode}

	</select>


</mapper>