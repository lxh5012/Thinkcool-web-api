<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.authine.cloudpivot.ext.mapper.SummaryTaskMapper">


    <select id="queryProjectTask" parameterType="com.authine.cloudpivot.ext.vo.SummaryTaskVO" resultType="com.authine.cloudpivot.ext.vo.SummaryTaskVO">
        SELECT
            t.Jobcode AS jobId,
            (SELECT b.`name` from i_ProjectTeamBU b where b.id = t.bu ) as bu,
            t.ContractLegalEntity AS contractLegalEntity,
            t.ClientGroup AS clientGroup,
            t.ClientBrand AS clientBrand,
            (select p.JobCode from i_project_summary p where p.id =  t.Jobcode) AS jobCode,
            t.ProjectName AS projectName,
            date_format(t.ProjectStartDate,'%Y/%m/%d') AS projectStartDate,
            date_format(t.ProjectEndDate,'%Y/%m/%d') AS projectEndDate,
            count(t.jobCode) AS deliverableNum,
            (SELECT COUNT(1) FROM  i_dispatchsheet dis  WHERE  dis.Jobcode = t.jobCode ) AS taskNum,
            (SELECT	COUNT(1) FROM i_dispatchsheet dis WHERE dis.sequenceStatus = 'COMPLETED' AND dis.Jobcode = t.jobCode) AS finishedNum
        FROM	i_deliverable t
        where   1=1
        <if test="bu != null and bu != ''">
            AND  t.bu = (SELECT  b.id from i_ProjectTeamBU b where b.`name`= #{bu, jdbcType=VARCHAR} )
        </if>
        <if test="contractLegalEntity != null and contractLegalEntity != ''">
            AND  t.ContractLegalEntity = #{contractLegalEntity, jdbcType=VARCHAR}
        </if>
        <if test="clientGroup != null and clientGroup != ''">
            AND  t.ClientGroup = #{clientGroup, jdbcType=VARCHAR}
        </if>
        <if test="clientBrand != null and clientBrand != ''">
            AND  t.ClientBrand = #{clientBrand, jdbcType=VARCHAR}
        </if>
        <if test="jobCode != null and jobCode != ''">
            AND t.Jobcode = (select  p.id  from i_project_summary p where  p.JobCode = #{jobCode, jdbcType=VARCHAR})
        </if>
        <if test="projectName != null and projectName != ''">
            AND  t.ProjectName = #{projectName, jdbcType=VARCHAR}
        </if>
        <if test="projectStartDateBegin != null and projectStartDateBegin != ''">
            AND  t.ProjectStartDate <![CDATA[>=]]>  #{projectStartDateBegin, jdbcType=DATE}
        </if>
        <if test="projectStartDateEnd != null and projectStartDateEnd != ''">
            AND  t.ProjectStartDate <![CDATA[<=]]>  #{projectStartDateEnd, jdbcType=DATE}
        </if>
        <if test="projectEndDateBegin != null and projectEndDateBegin != ''">
            AND  t.ProjectEndDate <![CDATA[=<]]>  #{projectEndDate, jdbcType=DATE}
        </if>
        <if test="projectEndDateEnd != null and projectEndDateEnd != ''">
            AND  t.ProjectEndDate <![CDATA[=<]]>  #{projectEndDate, jdbcType=DATE}
        </if>
        GROUP BY t.Jobcode order by t.ProjectStartDate desc
    </select>

    <select id="queryDeliverableTask"  parameterType="com.authine.cloudpivot.ext.vo.DeliverableTaskVO" resultType="com.authine.cloudpivot.ext.vo.DeliverableTaskVO">
       SELECT       t.id ,
            t.Jobcode as jobId,
            (select p.JobCode from i_project_summary p where p.id =  t.Jobcode) AS jobCode,
            t.ProjectName AS projectName,
            (SELECT c.`name` from i_category c where c.id= t.DeliverableCategory ) AS deliverableCategory,
            t.DeliverableDescription AS deliverableDescription,
            t.Quantity as quantity,
            (SELECT count(1) FROM i_DispatchSheet d WHERE d.Jobcode = t.Jobcode
                AND d.DeliverableDescription = t.id ) AS taskNumber,
            ( SELECT count(1) FROM i_DispatchSheet d WHERE d.sequenceStatus = 'PROCESSING' and d.Jobcode = t.Jobcode AND d.DeliverableDescription = t.id ) AS unfinishNumber,
            ( SELECT count(1) FROM i_DispatchSheet d WHERE d.sequenceStatus = 'COMPLETED' and d.Jobcode = t.Jobcode AND d.DeliverableDescription = t.id ) AS finishNumber,
            ( SELECT d.Deadline FROM i_DispatchSheet d WHERE d.Jobcode = t.Jobcode AND d.DeliverableDescription = t.id limit 1) AS deadline
        FROM	i_deliverable t
        where   EXISTS
                (select 1 from i_project_summary p where p.JobCode = #{jobCode, jdbcType=VARCHAR})
            <if test="deliverableDescription != null and deliverableDescription != ''">
                and t.DeliverableDescription = #{deliverableDescription, jdbcType=VARCHAR}
            </if>
            <if test="deliverableCategory != null and deliverableCategory != ''">
              and exists (
                  SELECT 1 from i_category c where c.`name`= #{deliverableCategory, jdbcType=VARCHAR}
                )
            </if>
            <if test="quantity != null and quantity != ''">
                and t.Quantity = #{quantity, jdbcType=NUMERIC}
            </if>
            <if test="quantity != null and quantity != ''">
                and t.Quantity = #{quantity, jdbcType=NUMERIC}
            </if>
            <if test="deadlineStart != null and deadlineStart != ''">
               and ( SELECT max(d.Deadline) FROM i_DispatchSheet d WHERE d.Jobcode = t.Jobcode AND d.DeliverableDescription = t.id )  <![CDATA[>=]]>  #{deadlineStart, jdbcType=DATE}
            </if>
            <if test="deadlineEND != null and deadlineEND != ''">
                and ( SELECT max(d.Deadline) FROM i_DispatchSheet d WHERE d.Jobcode = t.Jobcode AND d.DeliverableDescription = t.id )  <![CDATA[=<]]>  #{deadlineStart, jdbcType=DATE}
            </if>
        GROUP BY t.DeliverableCategory order by t.createdTime desc
    </select>


    <select id="queryTaskDetial"  parameterType="com.authine.cloudpivot.ext.vo.TaskDetialVO" resultType="com.authine.cloudpivot.ext.vo.TaskDetialVO">
        SELECT
        t.Jobcode AS jobId,
        (SELECT p.JobCode FROM i_project_summary p WHERE p.id = t.Jobcode ) AS jobCode,
        (SELECT c.`name` FROM i_category c WHERE c.id = t.DeliverableCategory ) AS deliverableCategory,
        (SELECT d.DeliverableDescription FROM i_deliverable d WHERE d.id = t.DeliverableDescription ) AS deliverableDescription,
        t.TaskDistributor AS taskDistributors,
        t.Taskowner AS taskOwners,
        t.Quantity AS quantity,
        t.sequenceStatus AS taskStatus,
        t.attachmentUrl AS attachmentUrl,
        ( SELECT w.id FROM biz_workitem w,biz_workflow_instance i WHERE w.instanceId = t.workflowInstanceId
        AND t.id = i.bizObjectId AND w.activityCode = 'Activity6' ) AS workItemId,
        t.workflowInstanceId AS workflowInstanceId
        FROM i_DispatchSheet t
        WHERE t.sequenceStatus IN ('COMPLETED', 'PROCESSING')
        AND t.workflowInstanceId IS NOT NULL
        AND EXISTS (
        SELECT 1 FROM i_project_summary p WHERE p.JobCode = #{jobCode, jdbcType=VARCHAR} and p.id = t.Jobcode )
        <if test="taskStatus != null and taskStatus != ''">
            and t.sequenceStatus = #{taskStatus, jdbcType=VARCHAR}
        </if>
        <if test="deliverableCategory != null and deliverableCategory != ''">
            and t.deliverableCategory = #{deliverableCategory, jdbcType=VARCHAR}
        </if>
        <if test="deliverableDescription != null and deliverableDescription != ''">
            and t.deliverableDescription = #{deliverableDescription, jdbcType=VARCHAR}
        </if>
        <if test="quantity != null and quantity != ''">
            and t.Quantity = #{quantity, jdbcType=NUMERIC}
        </if>
        <if test="taskDistributorUserName != null and taskDistributorUserName != ''">
            and t.TaskDistributor like '%'#{taskDistributorUserName, jdbcType=VARCHAR}'%'
        </if>
        <if test="taskOwnerUserName != null and taskOwnerUserName != ''">
            and t.Taskowner like '%'#{taskOwnerUserName, jdbcType=VARCHAR}'%'
        </if>
    </select>

    <select id="acceptTaskList"  parameterType="com.authine.cloudpivot.ext.vo.AcceptTaskVO" resultType="com.authine.cloudpivot.ext.vo.AcceptTaskVO">
            SELECT
                d.ProjectTeamBU AS bu,
                d.Jobcode AS jobId,
                (SELECT p.JobCode FROM i_project_summary p WHERE p.id = d.Jobcode ) AS jobCode,
                d.ProjectName AS projectName,
                d.DeliverableDescription AS deliverableDescriptionId,
                (SELECT t.DeliverableDescription FROM i_deliverable t WHERE t.id = d.DeliverableDescription ) AS deliverableDescription,
                d.DeliverableCategory AS deliverableCategoryId,
                (SELECT c.`name` FROM i_category c WHERE c.id = d.DeliverableCategory ) AS deliverableCategory,
                d.TaskDistributor AS taskDistributors,
                d.TaskRequirement AS taskRequirement,
                d.Quantity AS quantity,
                d.Deadline AS deadline,
                t.id AS workflowInstanceId,
                w.id AS workItemId
            FROM i_DispatchSheet d, biz_workitem w  ,biz_workflow_instance t
            WHERE d.id = t.bizObjectId  and t.id = w.instanceId
                 AND w.activityCode = 'Activity3'
            <if test="bu != null and bu != ''">
                and d.ProjectTeamBU = #{bu, jdbcType=VARCHAR}
            </if>
            <if test="jobCode != null and jobCode != ''">
                and (SELECT p.JobCode FROM i_project_summary p WHERE p.id = d.Jobcode ) = #{jobCode, jdbcType=VARCHAR}
            </if>
            <if test="projectName != null and projectName != ''">
                and d.ProjectName = #{projectName, jdbcType=VARCHAR}
            </if>
            <if test="deliverableDescription != null and deliverableDescription != ''">
                and (SELECT t.DeliverableDescription FROM i_deliverable t WHERE t.id = d.DeliverableDescription )  = #{deliverableDescription, jdbcType=VARCHAR}
            </if>
            <if test="taskRequirement != null and taskRequirement != ''">
                and d.TaskRequirement = #{taskRequirement, jdbcType=VARCHAR}
            </if>
            <if test="quantity != null and quantity != ''">
                and d.Quantity = #{quantity, jdbcType=NUMERIC}
            </if>
            <if test="taskDistributors != null and taskDistributors != ''">
                and d.TaskDistributor = #{taskDistributors, jdbcType=VARCHAR}
            </if>
        ORDER BY d.createdtime desc
    </select>

</mapper>