<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.authine.cloudpivot.ext.mapper.SummaryTaskMapper">

    <!-- <resultMap id="BaseResultMap" type="com.authine.cloudpivot.web.api.entity.SummaryTaskModel">
       <result column="id" jdbcType="INTEGER" property="id" />
        <result column="userName" jdbcType="VARCHAR" property="userName" />
        <result column="passWord" jdbcType="VARCHAR" property="passWord" />
        <result column="realName" jdbcType="VARCHAR" property="realName" />
    </resultMap>-->


    <select id="queryProjectTask"  parameterType="com.authine.cloudpivot.ext.vo.SummaryTaskModel" resultType="com.authine.cloudpivot.ext.vo.SummaryTaskModel">
            SELECT
                t.id AS summaryId,
                t.bu AS bu,
                t.ContractLegalEntity AS contractLegalEntity,
                t.ClientGroup AS clientGroup,
                t.ClientBrand AS clientBrand,
                t.Jobcode AS jobCode,
                t.ProjectName AS projectName,
                date_format(t.ProjectStartDate,'%Y/%m/%d') AS projectStartDate,
                date_format(t.ProjectEndDate,'%Y/%m/%d') AS projectEndDate,
                count(t.jobCode) AS deliverableNum,
                (SELECT COUNT(1) FROM  i_dispatchsheet dis  WHERE  dis.Jobcode = t.jobCode ) AS taskNum,
                (SELECT	COUNT(1) FROM i_dispatchsheet dis WHERE dis.sequenceStatus = 'COMPLETED' AND dis.Jobcode = t.jobCode) AS finishedNum
            FROM	i_deliverable t
            where   t.`owner` = #{userId, jdbcType=VARCHAR} or t.creater = #{userId, jdbcType=VARCHAR}
                 <if test="bu != null ">
                        AND  t.bu = #{bu, jdbcType=VARCHAR}
                 </if>
                <if test="contractLegalEntity != null ">
                    AND  t.ContractLegalEntity = #{contractLegalEntity, jdbcType=VARCHAR}
                </if>
                <if test="clientGroup != null ">
                    AND  t.ClientGroup = #{clientGroup, jdbcType=VARCHAR}
                </if>
                <if test="clientBrand != null ">
                    AND  t.ClientBrand = #{clientBrand, jdbcType=VARCHAR}
                </if>
                <if test="jobCode != null ">
                    AND  t.Jobcode = #{jobCode, jdbcType=VARCHAR}
                </if>
                <if test="projectName != null ">
                    AND  t.ProjectName = #{projectName, jdbcType=VARCHAR}
                </if>
            GROUP BY jobCode order by t.ProjectStartDate desc
    </select>


</mapper>