<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.authine.cloudpivot.ext.mapper.ClientPaymentMapper">

    <resultMap id="ClientPayBaseResultMap" type="com.authine.cloudpivot.ext.vo.ClientPaymentFinVO">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="ClientPO" property="clientPO" jdbcType="VARCHAR"/>
        <result column="ClientPOvalue" property="clientPOvalue" jdbcType="VARCHAR"/>
        <result column="InvoicingDateClient" property="invoicingDateClient" jdbcType="DECIMAL"/>
        <result column="ClientInvoice" property="clientInvoice" jdbcType="VARCHAR"/>
        <result column="amountBeforeTax" property="clientInvoiceTotalAmountBF" jdbcType="DECIMAL"/>
        <result column="amountAfterTax" property="clientInvoiceTotalAmountAF" jdbcType="DECIMAL"/>
        <result column="ClientPaymentCheckDate" property="clientPaymentCheckDate" jdbcType="DATE"/>
        <result column="ClientPaymentAging" property="clientPaymentAging" jdbcType="VARCHAR"/>
        <result column="ClientaymentRemittanceDate" property="clientPaymentRemittanceDate" jdbcType="DATE"/>
        <result column="ClientPaymentOverDue" property="clientPaymentOverDue" jdbcType="DATE"/>
        <result column="clientPayId" property="clientPayId" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getClientPaymentList" resultType="com.authine.cloudpivot.ext.vo.ClientPaymentVO">
    select a.id as bizid,b.id as id,a.Jobcode,a.ProjectName,date_format(b.InvoicingDateClient,'%Y/%m/%d') as InvoicingDateClient ,b.ClientInvoice,b.amountBeforeTax,b.amountAfterTax,date_format(b.ClientPaymentAging,'%Y/%m/%d') as ClientPaymentAging,
        date_format(b.ClientaymentRemittanceDate,'%Y/%m/%d') as ClientaymentRemittanceDate,date_format(b.ClientPaymentCheckDate,'%Y/%m/%d') as ClientPaymentCheckDate,b.ClientPaymentOverDue
    from  i_clientpayment a join i_clientpaymentfin b on a.id=b.parentId and
    <if test="queryClientPayment.Jobcode !=null and queryClientPayment.Jobcode!='' ">
        a.jobcode like '%${queryClientPayment.Jobcode}%'  and
    </if>
    <if test="queryClientPayment.ProjectName !=null and queryClientPayment.ProjectName!='' ">
        a.ProjectName like '%${queryClientPayment.ProjectName}%'  and
    </if>

    <if test="queryClientPayment.InvoicingDateClient !=null and queryClientPayment.InvoicingDateClient !='' ">
        b.InvoicingDateClient >= STR_TO_DATE(#{queryClientPayment.InvoicingDateClient},'%Y-%m-%d')  and
    </if>
    <if test="queryClientPayment.ClientInvoice !=null and queryClientPayment.ClientInvoice!='' ">
        b.ClientInvoice like '%${queryClientPayment.ClientInvoice}%'  and
    </if>
    <if test="queryClientPayment.amountBeforeTax !=null and queryClientPayment.amountBeforeTax!='' ">
        b.amountBeforeTax like '%${queryClientPayment.amountBeforeTax}%'  and
    </if>
    <if test="queryClientPayment.amountBeforeTax !=null and queryClientPayment.amountBeforeTax!='' ">
        b.amountBeforeTax &gt;= ${queryClientPayment.amountBeforeTax}  and
    </if>
    <if test="queryClientPayment.amountAfterTax !=null and queryClientPayment.amountAfterTax!='' ">
        b.amountAfterTax >= ${queryClientPayment.amountAfterTax}  and
    </if>
    <if test="queryClientPayment.ClientPaymentAging !=null and queryClientPayment.ClientPaymentAging!='' ">
        b.ClientPaymentAging >= STR_TO_DATE(#{queryClientPayment.ClientPaymentAging},'%Y-%m-%d')  and
    </if>
    <if test="queryClientPayment.ClientaymentRemittanceDate !=null and queryClientPayment.ClientaymentRemittanceDate !='' ">
        b.ClientaymentRemittanceDate >= STR_TO_DATE(#{queryClientPayment.ClientaymentRemittanceDate},'%Y-%m-%d')  and
    </if>
    <if test="queryClientPayment.ClientPaymentCheckDate !=null and queryClientPayment.ClientPaymentCheckDate !='' ">
        b.ClientPaymentCheckDate >= STR_TO_DATE(#{queryClientPayment.ClientPaymentCheckDate},'%Y-%m-%d')  and
    </if>
    <if test="queryClientPayment.ClientPaymentOverDue !=null and queryClientPayment.ClientPaymentOverDue!='' ">
        b.ClientPaymentOverDue &gt;= ${queryClientPayment.ClientPaymentOverDue}  and
    </if>
    1=1
    order by a.createdTime desc
    </select>

    <select id="getClientPaymentFinList" resultMap="ClientPayBaseResultMap" parameterType="com.authine.cloudpivot.ext.queryVo.QueryClientPayment">
     SELECT
          clpay.ClientPO,
          clpay.id clientPayId,
          clfin.id id,
          clfin.ClientPOvalue,
          clfin.InvoicingDateClient,
          clfin.ClientInvoice,
          clfin.amountBeforeTax, -- 客户发票总金额(税前)
          clfin.amountAfterTax, -- 客户发票总金额(税后)
          date_format(clfin.ClientPaymentCheckDate,'%Y/%m/%d') ClientPaymentCheckDate, -- 客户付款确认日
          clfin.ClientPaymentAging, -- 客户付款账龄
          date_format(clfin.ClientaymentRemittanceDate, '%Y/%m/%d' ) ClientaymentRemittanceDate, -- 实际付款日
          date_format(clfin.ClientPaymentOverDue , '%Y/%m/%d' ) ClientPaymentOverDue -- 客户付款逾期日
    FROM
	  i_clientpaymentfin clfin
    LEFT JOIN i_clientpayment clpay ON clfin.parentId=clpay.id
    where Jobcode =#{jobcode}
    order by clpay.createdTime desc
    </select>
</mapper>